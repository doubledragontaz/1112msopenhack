{
	"name": "MergeCloudSales",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Orders",
						"type": "DatasetReference"
					},
					"name": "Orders"
				},
				{
					"dataset": {
						"referenceName": "OrderDetails",
						"type": "DatasetReference"
					},
					"name": "OrderDetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "SaveData"
				}
			],
			"transformations": [
				{
					"name": "JoinOnOrderID"
				},
				{
					"name": "AddColumns"
				}
			],
			"script": "\n\nsource(output(\n\t\tOrderID as string,\n\t\tCustomerID as string,\n\t\tOrderDate as date,\n\t\tShipDate as date,\n\t\tTotalCost as decimal(10,0),\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Orders\nsource(output(\n\t\tOrderDetailID as string,\n\t\tOrderID as string,\n\t\tMovieID as string,\n\t\tQuantity as integer,\n\t\tUnitCost as decimal(10,0),\n\t\tLineNumber as integer,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OrderDetails\nOrders, OrderDetails join(Orders@OrderID == OrderDetails@OrderID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinOnOrderID\nJoinOnOrderID derive(SourceSystemID = 1,\n\t\tGlobalCustomerID = uuid()) ~> AddColumns\nAddColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tOrderID = Orders@OrderID,\n\t\tCustomerID,\n\t\tOrderDate,\n\t\tShipDate,\n\t\tTotalCost,\n\t\tCreatedDate = Orders@CreatedDate,\n\t\tUpdatedDate = Orders@UpdatedDate,\n\t\tOrderDetailID,\n\t\tOrderDetailOrderID = OrderDetails@OrderID,\n\t\tMovieID,\n\t\tQuantity,\n\t\tUnitCost,\n\t\tLineNumber,\n\t\tOrderDetailCreatedDate = OrderDetails@CreatedDate,\n\t\tOrderDetailUpdatedDate = OrderDetails@UpdatedDate,\n\t\tSourceSystemID,\n\t\tGlobalCustomerID\n\t),\n\tpartitionBy('roundRobin', 2)) ~> SaveData"
		}
	}
}